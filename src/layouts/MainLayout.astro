---
import Header from '../components/common/Header.astro';
import Footer from '../components/common/Footer.astro';

export interface Props {
    title: string;
}

const { title } = Astro.props;
---
<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700&family=Playfair+Display:wght@400;700&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style is:global>
        /* CSS for the cursor trail particles */
        .cursor-trail-particle {
            position: fixed;
            pointer-events: none;
            z-index: 9999;
            background-color: white;
            border-radius: 50%;
            opacity: 0;
            transform: scale(0);
            transition: transform 0.5s ease-out, opacity 0.5s ease-out;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.8), 0 0 5px rgba(255, 255, 255, 0.5);
        }

        /* Your other styles for fonts and colors */
        body {
            font-family: 'Roboto', sans-serif;
            @apply text-gray-700 bg-gray-50;
        }
        h1, h2, h3 {
            font-family: 'Playfair Display', serif;
        }
        .font-cinzel {
            font-family: 'Cinzel Decorative', serif;
        }
    </style>
</head>
<body class="antialiased">
    <slot />
    <Footer />

    <script>
        document.addEventListener('mousemove', (e) => {
            // Create a new div element for the trail particle
            const particle = document.createElement('div');
            particle.className = 'cursor-trail-particle';
            document.body.appendChild(particle);

            // Set the initial position of the particle
            particle.style.left = `${e.clientX}px`;
            particle.style.top = `${e.clientY}px`;
            
            // Trigger the animation after a short delay
            setTimeout(() => {
                particle.style.transform = 'scale(1)';
                particle.style.opacity = '1';
            }, 10);

            // Make the particle fade out and be removed after a short time
            setTimeout(() => {
                particle.style.transform = 'scale(0.1)';
                particle.style.opacity = '0';
            }, 300);

            // Remove the particle from the DOM when the animation is done
            setTimeout(() => {
                particle.remove();
            }, 800);
        });
    </script>
</body>
</html>